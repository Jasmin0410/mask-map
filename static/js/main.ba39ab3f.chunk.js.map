{"version":3,"sources":["style/img/marker.svg","style/img/phone.svg","redux/store.js","redux/reducer.js","redux/action.js","Component/common/GetData.js","Component/MaskMap.js","Component/navbar/StoreItem.js","Component/navbar/StoreList.js","Component/NavBar.js","App.js","index.js"],"names":["module","exports","store","createStore","state","action","type","location","updateLocation","GetMaskData","fetch","then","res","json","data","features","catch","err","console","log","iconUrl","btoa","blueIcon","L","MaskMap","props","storedata","GetUserGeo","bind","that","this","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","alert","map","center","zoom","attribution","addTo","importData","setState","markers","i","length","lat","geometry","coordinates","lon","adult","properties","mask_adult","child","mask_child","maskStatus","item","addLayer","icon","bindPopup","name","marker","address","phone","closeButton","getdata","setInterval","prevProps","panTo","centerStore","filter","setView","setLatLng","setContent","openOn","clearInterval","id","Component","connect","dispatch","StoreItem","storeInfo","storeLocation","className","onClick","src","href","target","StoreList","storeRender","stores","key","NavBar","cityName","areaName","citySelect","CityCountyData","city","CityEngName","value","CityName","stockStore","includes","storeList","onChange","e","getCenter","AreaList","area","AreaEngName","AreaName","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba39ab3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.799a7977.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.ed1dfd6b.svg\";","import { createStore } from 'redux'\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);","export const reducer = (state = [24.97, 121.53], action) => {\r\n  switch (action.type) {\r\n    case 'updateLocation':\r\n      return action.location\r\n    default:\r\n      return state\r\n  }\r\n}","\r\nexport function updateLocation(location) { return { type: 'updateLocation', location } }","import * as L from 'leaflet';\r\n\r\n//link API and get mask data\r\nexport function GetMaskData() {\r\n  return fetch('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json?fbclid=IwAR0oowBRjj1goAMqtnugBiXMTMY8OCl14TGmgt3YDJi9w5BXs4VsfZQ9mDI')\r\n    .then(res => { return res.json() })\r\n    .then(data => { return data.features })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// For customMarker\r\nconst svg = \"<svg xmlns='http://www.w3.org/2000/svg' width='32' height='42.667' viewBox='0 0 32 42.667'><defs><style>.a{fill:#668afe;}.b{fill:none;stroke:#fff;stroke-linecap:round;stroke-width:4px;}</style></defs><g transform='translate(-960 -429)'><path class='a' d='M14.356,41.806C2.247,24.252,0,22.451,0,16a16,16,0,1,1,32,0c0,6.451-2.248,8.252-14.356,25.806a2,2,0,0,1-3.289,0Z' transform='translate(960 429)'/><g transform='translate(0 2)'><line class='b' x2='14' transform='translate(969 445)'/><line class='b' x2='14' transform='translate(976 438) rotate(90)'/></g></g></svg>\";\r\nconst iconUrl = 'data:image/svg+xml;base64,' + btoa(svg);\r\n\r\nexport const blueIcon = L.icon({\r\n  iconUrl: iconUrl,\r\n});\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster'\r\n\r\n//import svg icon\r\nimport marker from '../style/img/marker.svg'\r\nimport phone from '../style/img/phone.svg'\r\n\r\nimport { GetMaskData, blueIcon } from './common/GetData';\r\n\r\nclass MaskMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      storedata: []\r\n    }\r\n    this.GetUserGeo = this.GetUserGeo.bind(this);\r\n  }\r\n\r\n  GetUserGeo() {\r\n    const that = this;\r\n    function success(position) {\r\n      const latitude = position.coords.latitude;\r\n      const longitude = position.coords.longitude;\r\n\r\n      that.props.updateLocation([latitude, longitude])\r\n    }\r\n\r\n    function error() {\r\n      alert('Unable to retrieve your location');\r\n    }\r\n\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation is not supported by your browser');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 引入地圖\r\n    this.map = L.map('map', {\r\n      center: this.props.location,\r\n      zoom: 16\r\n    });\r\n\r\n    // 引入圖資\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n\r\n    // 藉由 GetMaskData 引入資料\r\n    const importData = () => GetMaskData().then(data => {\r\n      this.setState({ storedata: data });\r\n      // 引入 markerClusterGroup\r\n      const markers = L.markerClusterGroup().addTo(this.map);\r\n\r\n      for (let i = 0; i < (data.length - 1); i++) {\r\n        let lat = data[i].geometry.coordinates[1];\r\n        let lon = data[i].geometry.coordinates[0];\r\n        let adult = data[i].properties.mask_adult;\r\n        let child = data[i].properties.mask_child;\r\n\r\n        // 判斷口罩是否有庫存\r\n        const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n        // 新贈 markers\r\n        markers.addLayer(L.marker([lat, lon], { icon: blueIcon })\r\n          .bindPopup(\r\n            `<div>\r\n              <div class=\"store-name\">${data[i].properties.name}</div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\" src=${marker} />${data[i].properties.address}\r\n              </div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\" src=${phone} />${data[i].properties.phone}\r\n              </div>\r\n              <div class=\"mask-status\">\r\n                <div class='popup mask-item ${maskStatus(adult)}'>大人: ${adult}</div>\r\n                <div class='popup mask-item ${maskStatus(child)}'>小孩: ${child} </div>\r\n              </div>\r\n            </div>`,\r\n            { closeButton: false }\r\n          ));\r\n      }\r\n      this.map.addLayer(markers);\r\n    });\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 60000);\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const location = this.props.location;\r\n\r\n    if (prevProps.location !== location) {\r\n      this.map.panTo([location[0], location[1]]);\r\n\r\n      const centerStore = this.state.storedata.filter(store => {\r\n        return store.geometry.coordinates[1] === location[0] && store.geometry.coordinates[0] === location[1]\r\n      })\r\n\r\n      if (centerStore[0]) {\r\n        const store = centerStore[0];\r\n        let adult = store.properties.mask_adult;\r\n        let child = store.properties.mask_child;\r\n\r\n        const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n        this.map.setView([location[0], location[1]], 18);\r\n        L.popup()\r\n          .setLatLng([location[0], location[1]])\r\n          .setContent(`<div>\r\n                <div class=\"store-name\">${store.properties.name}</div>\r\n                <div class=\"store-info\">\r\n                  <img class=\"icon\" src=${marker} />${store.properties.address}\r\n                </div>\r\n                <div class=\"store-info\">\r\n                  <img class=\"icon\"src=${phone} />${store.properties.phone}\r\n                </div>\r\n                <div class=\"mask-status\">\r\n                  <div class='popup mask-item ${maskStatus(adult)}'>大人: ${adult}</div>\r\n                  <div class='popup mask-item ${maskStatus(child)}'>小孩: ${child}</div>\r\n                </div>\r\n              </div>`)\r\n          .openOn(this.map)\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"map\"></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = location => ({ location })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaskMap);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../../redux/action';\r\n\r\n//import svg icon\r\nimport marker from '../../style/img/marker.svg'\r\nimport phone from '../../style/img/phone.svg'\r\n\r\nclass StoreItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const storeInfo = this.props.store.properties;\r\n    const storeLocation = this.props.store.geometry.coordinates;\r\n    const adult = storeInfo.mask_adult;\r\n    const child = storeInfo.mask_child;\r\n\r\n    const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n    return (\r\n      <div\r\n        className=\"store-item\"\r\n        onClick={() => this.props.updateLocation([storeLocation[1], storeLocation[0]])}\r\n      >\r\n        <div className=\"store-name\">{storeInfo.name}</div>\r\n        <div className=\"store-info\">\r\n          <img className=\"icon\" src={marker} />\r\n          <a href={`https://www.google.com.tw/maps/search/${storeInfo.address}`} target=\"_blank\">{storeInfo.address}</a>\r\n        </div>\r\n        <div className=\"store-info\">\r\n          <img className=\"icon\" src={phone} />{storeInfo.phone}\r\n        </div>\r\n        <div className=\"mask-status\">\r\n          <div className={`mask-item adult ${maskStatus(adult)}`}>大人: {adult}</div>\r\n          <div className={`mask-item child ${maskStatus(child)}`}>小孩: {child} </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StoreItem);\r\n","import React, { Component } from 'react';\r\nimport StoreItem from './StoreItem';\r\n\r\nclass StoreList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const storeRender = this.props.stores\r\n      .map(store => <StoreItem key={store.properties.id} store={store} />)\r\n\r\n    return (\r\n      <div className=\"store-list\">\r\n        {storeRender}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default StoreList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\n\r\nimport StoreList from './navbar/StoreList'\r\nimport { GetMaskData } from './common/GetData';\r\nimport CityCountyData from './common/CityCountyData.json'\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      cityName: '新北市',\r\n      areaName: '新店區'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const importData = () => GetMaskData()\r\n      .then(data => {\r\n        this.setState({ data: data })\r\n      })\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 600000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    const citySelect = CityCountyData\r\n      .map(city => <option key={city.CityEngName} value={city.CityName}>{city.CityName}</option>);\r\n\r\n    const areaSelect = () => {\r\n      const city = CityCountyData.filter(city => city.CityName === this.state.cityName);\r\n      return city[0].AreaList\r\n        .map(area => <option key={area.AreaEngName} value={area.AreaName}>{area.AreaName}</option>);\r\n    }\r\n\r\n    const stockStore = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName) &&\r\n        (storeInfo.mask_adult !== 0 || storeInfo.mask_child !== 0);\r\n    })\r\n\r\n    const storeList = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName)\r\n    })\r\n\r\n    const getCenter = () => {\r\n      if (stockStore.length === 0) { return }\r\n      let lat = stockStore[0].geometry.coordinates[1];\r\n      let lon = stockStore[0].geometry.coordinates[0];\r\n      return [lat, lon]\r\n    }\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"city-search\">\r\n          <div className=\"city-select\">\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.cityName}\r\n              onChange={(e) => this.setState({ cityName: e.target.value, areaName: '' })}\r\n            >\r\n              {citySelect}\r\n            </select>\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.areaName}\r\n              onChange={(e) => {\r\n                this.setState({ areaName: e.target.value })\r\n                this.props.updateLocation(getCenter())\r\n              }}\r\n            >\r\n              {areaSelect()}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"city-total\">\r\n            能取得口罩的藥局有：<span>{stockStore.length}</span>家\r\n        </div>\r\n        </div>\r\n\r\n        <StoreList stores={storeList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBar);\r\n","import React from 'react';\r\nimport './style/style.scss';\r\nimport './style/reset.css';\r\nimport MaskMap from './Component/MaskMap';\r\nimport NavBar from './Component/NavBar';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n      <MaskMap />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}