{"version":3,"sources":["redux/store.js","redux/reducer.js","redux/action.js","Component/common/GetData.js","Component/MaskMap.js","Component/navbar/StoreItem.js","Component/navbar/StoreList.js","Component/NavBar.js","App.js","index.js"],"names":["store","createStore","state","action","type","location","updateLocation","GetMaskData","fetch","then","res","json","data","features","catch","err","console","log","iconUrl","btoa","blueIcon","L","MaskMap","props","GetUserGeo","bind","that","this","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","alert","map","center","zoom","attribution","addTo","importData","markers","i","length","lat","geometry","coordinates","lon","adult","properties","mask_adult","child","mask_child","maskStatus","item","addLayer","icon","bindPopup","name","address","phone","closeButton","maxWidth","getdata","setInterval","prevProps","panTo","clearInterval","id","Component","connect","dispatch","StoreItem","storeInfo","storeLocation","className","onClick","StoreList","storeRender","stores","key","NavBar","cityName","areaName","setState","citySelect","CityCountyData","city","CityEngName","value","CityName","stockStore","filter","includes","storeList","onChange","e","target","getCenter","AreaList","area","AreaEngName","AreaName","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42002564.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);","export const reducer = (state = [24.97, 121.53], action) => {\r\n  switch (action.type) {\r\n    case 'updateLocation':\r\n      return action.location\r\n    default:\r\n      return state\r\n  }\r\n}","\r\nexport function updateLocation(location) { return { type: 'updateLocation', location } }","import * as L from 'leaflet';\r\n\r\n//link API and get mask data\r\nexport function GetMaskData() {\r\n  return fetch('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json?fbclid=IwAR0oowBRjj1goAMqtnugBiXMTMY8OCl14TGmgt3YDJi9w5BXs4VsfZQ9mDI')\r\n    .then(res => { return res.json() })\r\n    .then(data => { return data.features })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// For customMarker\r\nconst svg = \"<svg xmlns='http://www.w3.org/2000/svg' width='32' height='42.667' viewBox='0 0 32 42.667'><defs><style>.a{fill:#668afe;}.b{fill:none;stroke:#fff;stroke-linecap:round;stroke-width:4px;}</style></defs><g transform='translate(-960 -429)'><path class='a' d='M14.356,41.806C2.247,24.252,0,22.451,0,16a16,16,0,1,1,32,0c0,6.451-2.248,8.252-14.356,25.806a2,2,0,0,1-3.289,0Z' transform='translate(960 429)'/><g transform='translate(0 2)'><line class='b' x2='14' transform='translate(969 445)'/><line class='b' x2='14' transform='translate(976 438) rotate(90)'/></g></g></svg>\";\r\nconst iconUrl = 'data:image/svg+xml;base64,' + btoa(svg);\r\n\r\nexport const blueIcon = L.icon({\r\n  iconUrl: iconUrl,\r\n});\r\n\r\n//SVG icon\r\n\r\n// export const phoneIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"12.25\" viewBox=\"0 0 14 12.25\"><defs><style>.a{fill:#888;}</style></defs><path class=\"a\" d=\"M10.129,36.382A1.75,1.75,0,0,0,8.609,35.5H5.39a1.75,1.75,0,0,0-1.52.882L.99,41.423a.875.875,0,0,0-.115.434v1.518a.875.875,0,0,0,.875.875h10.5a.875.875,0,0,0,.875-.875V41.857a.875.875,0,0,0-.115-.434ZM7,41.625a1.969,1.969,0,1,1,1.969-1.969A1.969,1.969,0,0,1,7,41.625Zm6.841-7.137a10.648,10.648,0,0,0-13.682,0A.45.45,0,0,0,0,34.834v1.541a.437.437,0,0,0,.437.438H2.354a.437.437,0,0,0,.391-.242L3.5,34.625A8.733,8.733,0,0,1,7,33.969a8.738,8.738,0,0,1,3.5.656l.754,1.946a.437.437,0,0,0,.391.242h1.917A.437.437,0,0,0,14,36.375V34.834a.45.45,0,0,0-.159-.346Z\" transform=\"translate(0 -32)\" /></svg>;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster'\r\n\r\nimport { GetMaskData, blueIcon } from './common/GetData';\r\n\r\nclass MaskMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n    this.GetUserGeo = this.GetUserGeo.bind(this);\r\n  }\r\n\r\n  GetUserGeo() {\r\n    const that = this;\r\n    function success(position) {\r\n      const latitude = position.coords.latitude;\r\n      const longitude = position.coords.longitude;\r\n\r\n      that.props.updateLocation([latitude, longitude])\r\n    }\r\n\r\n    function error() {\r\n      alert('Unable to retrieve your location');\r\n    }\r\n\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation is not supported by your browser');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = L.map('map', {\r\n      center: this.props.location,\r\n      zoom: 16\r\n    });\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n\r\n    const importData = () => GetMaskData().then(data => {\r\n      const markers = L.markerClusterGroup().addTo(this.map);\r\n\r\n      for (let i = 0; i < (data.length - 1); i++) {\r\n        let lat = data[i].geometry.coordinates[1];\r\n        let lon = data[i].geometry.coordinates[0];\r\n        let adult = data[i].properties.mask_adult;\r\n        let child = data[i].properties.mask_child;\r\n\r\n        const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n        markers.addLayer(L.marker([lat, lon], { icon: blueIcon })\r\n          .bindPopup(\r\n            `<div>\r\n              <div class=\"store-name\">${data[i].properties.name}</div>\r\n              <div class=\"store-info\">${data[i].properties.address}</div>\r\n              <div class=\"store-info\">${data[i].properties.phone}</div>\r\n              <div class=\"mask-status\">\r\n                <div class='popup mask-item ${maskStatus(adult)}'>大人: ${adult}</div>\r\n                <div class='popup mask-item ${maskStatus(child)}'>小孩: ${child} </div>\r\n              </div>\r\n            </div>`,\r\n            { closeButton: false, maxWidth: 340 }\r\n          ));\r\n      }\r\n      this.map.addLayer(markers);\r\n    });\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 60000);\r\n\r\n    // this.GetUserGeo();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.location !== this.props.location) {\r\n      this.map.panTo([this.props.location[0], this.props.location[1]]);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"map\"></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = location => ({ location })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaskMap);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../../redux/action';\r\n\r\nclass StoreItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const storeInfo = this.props.store.properties;\r\n    const storeLocation = this.props.store.geometry.coordinates;\r\n    const adult = storeInfo.mask_adult;\r\n    const child = storeInfo.mask_child;\r\n\r\n    const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n    return (\r\n      <div\r\n        className=\"store-item\"\r\n        onClick={() => this.props.updateLocation([storeLocation[1], storeLocation[0]])}\r\n      >\r\n        <div className=\"store-name\">{storeInfo.name}</div>\r\n        <div className=\"store-info\">{storeInfo.address}</div>\r\n        <div className=\"store-info\">{storeInfo.phone}</div>\r\n        <div className=\"mask-status\">\r\n          <div className={`mask-item adult ${maskStatus(adult)}`}>大人: {adult}</div>\r\n          <div className={`mask-item child ${maskStatus(child)}`}>小孩: {child} </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StoreItem);\r\n","import React, { Component } from 'react';\r\nimport StoreItem from './StoreItem';\r\n\r\nclass StoreList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const storeRender = this.props.stores\r\n      .map(store => <StoreItem key={store.properties.id} store={store} />)\r\n\r\n    return (\r\n      <div className=\"store-list\">\r\n        {storeRender}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default StoreList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\n\r\nimport StoreList from './navbar/StoreList'\r\nimport { GetMaskData } from './common/GetData';\r\nimport CityCountyData from './common/CityCountyData.json'\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      cityName: '新北市',\r\n      areaName: '新店區'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const importData = () => GetMaskData()\r\n      .then(data => {\r\n        this.setState({ data: data })\r\n      })\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 600000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    const citySelect = CityCountyData\r\n      .map(city => <option key={city.CityEngName} value={city.CityName}>{city.CityName}</option>);\r\n\r\n    const areaSelect = () => {\r\n      const city = CityCountyData.filter(city => city.CityName === this.state.cityName);\r\n      return city[0].AreaList\r\n        .map(area => <option key={area.AreaEngName} value={area.AreaName}>{area.AreaName}</option>);\r\n    }\r\n\r\n    const stockStore = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName) &&\r\n        (storeInfo.mask_adult !== 0 || storeInfo.mask_child !== 0);\r\n    })\r\n\r\n    const storeList = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName)\r\n    })\r\n\r\n    const getCenter = () => {\r\n      if (stockStore.length === 0) { return }\r\n      let lat = stockStore[0].geometry.coordinates[1];\r\n      let lon = stockStore[0].geometry.coordinates[0];\r\n      return [lat, lon]\r\n    }\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"city-search\">\r\n          <div className=\"city-select\">\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.cityName}\r\n              onChange={(e) => this.setState({ cityName: e.target.value, areaName: '' })}\r\n            >\r\n              {citySelect}\r\n            </select>\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.areaName}\r\n              onChange={(e) => {\r\n                this.setState({ areaName: e.target.value })\r\n                this.props.updateLocation(getCenter())\r\n              }}\r\n            >\r\n              {areaSelect()}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"city-total\">\r\n            能取得口罩的藥局有：<span>{stockStore.length}</span>家\r\n        </div>\r\n        </div>\r\n\r\n        <StoreList stores={storeList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBar);\r\n","import React from 'react';\nimport './style/style.scss';\nimport './style/reset.css';\nimport MaskMap from './Component/MaskMap';\nimport NavBar from './Component/NavBar';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <MaskMap />\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}