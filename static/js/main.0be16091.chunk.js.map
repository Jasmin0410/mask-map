{"version":3,"sources":["style/img/marker.svg","style/img/phone.svg","redux/store.js","redux/reducer.js","redux/action.js","Component/common/GetData.js","Component/MaskMap.js","Component/navbar/StoreItem.js","Component/navbar/StoreList.js","Component/NavBar.js","App.js","index.js"],"names":["module","exports","store","createStore","state","action","type","location","updateLocation","GetMaskData","fetch","then","res","json","data","features","catch","err","console","log","iconUrl","btoa","blueIcon","L","MaskMap","props","storedata","GetUserGeo","bind","that","this","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","alert","map","center","zoom","attribution","addTo","importData","setState","markers","i","length","lat","geometry","coordinates","lon","adult","properties","mask_adult","child","mask_child","maskStatus","item","addLayer","icon","bindPopup","name","marker","address","phone","closeButton","getdata","setInterval","prevProps","panTo","centerStore","filter","openPopup","clearInterval","id","Component","connect","dispatch","StoreItem","storeInfo","storeLocation","className","onClick","src","StoreList","storeRender","stores","key","NavBar","cityName","areaName","citySelect","CityCountyData","city","CityEngName","value","CityName","stockStore","includes","storeList","onChange","e","target","getCenter","AreaList","area","AreaEngName","AreaName","App","ReactDOM","render","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,8/+BCG9BC,EAAQC,aCHE,WAAsC,IAArCC,EAAoC,uDAA5B,CAAC,MAAO,QAASC,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOD,EAAOE,SAChB,QACE,OAAOH,M,yDCJN,SAASI,EAAeD,GAAY,MAAO,CAAED,KAAM,iBAAkBC,Y,qDCErE,SAASE,IACd,OAAOC,MAAM,mJACVC,MAAK,SAAAC,GAAS,OAAOA,EAAIC,UACzBF,MAAK,SAAAG,GAAU,OAAOA,EAAKC,YAC3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAI9B,IACMG,EAAU,6BAA+BC,KADnC,2jBAGCC,EAAWC,OAAO,CAC7BH,QAASA,ICHLI,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDrB,MAAQ,CACXsB,UAAW,IAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBALD,E,0EASjB,IAAMC,EAAOC,KAYRC,UAAUC,YAGbD,UAAUC,YAAYC,oBAdxB,SAAiBC,GACf,IAAMC,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAElCR,EAAKJ,MAAMjB,eAAe,CAAC2B,EAAUE,OAGvC,WACEC,MAAM,uCAINA,MAAM,kD,0CAMW,IAAD,OAClBR,KAAKS,IAAMhB,MAAM,MAAO,CACtBiB,OAAQV,KAAKL,MAAMlB,SACnBkC,KAAM,KAGRlB,YAAY,qDAAsD,CAChEmB,YAAa,4FACZC,MAAMb,KAAKS,KAEd,IAAMK,EAAa,kBAAMnC,IAAcE,MAAK,SAAAG,GAC1C,EAAK+B,SAAS,CAAEnB,UAAWZ,IAG3B,IAFA,IAAMgC,EAAUvB,uBAAuBoB,MAAM,EAAKJ,KAEzCQ,EAAI,EAAGA,EAAKjC,EAAKkC,OAAS,EAAID,IAAK,CAC1C,IAAIE,EAAMnC,EAAKiC,GAAGG,SAASC,YAAY,GACnCC,EAAMtC,EAAKiC,GAAGG,SAASC,YAAY,GACnCE,EAAQvC,EAAKiC,GAAGO,WAAWC,WAC3BC,EAAQ1C,EAAKiC,GAAGO,WAAWG,WAEzBC,EAAa,SAACC,GAAW,OAAgB,IAATA,EAAa,UAAY,SAE/Db,EAAQc,SAASrC,SAAS,CAAC0B,EAAKG,GAAM,CAAES,KAAMvC,IAC3CwC,UADc,uDAGehD,EAAKiC,GAAGO,WAAWS,KAHlC,iGAKeC,IALf,cAK2BlD,EAAKiC,GAAGO,WAAWW,QAL9C,iHAQeC,IARf,cAQ0BpD,EAAKiC,GAAGO,WAAWY,MAR7C,yHAWqBR,EAAWL,GAXhC,2BAW+CA,EAX/C,+DAYqBK,EAAWF,GAZhC,2BAY+CA,EAZ/C,qDAeb,CAAEW,aAAa,KAGrB,EAAK5B,IAAIqB,SAASd,OAGpBF,IACAd,KAAKsC,QAAUC,YAAYzB,EAAY,O,yCAMtB0B,GAAY,IAAD,OAC5B,GAAIA,EAAU/D,WAAauB,KAAKL,MAAMlB,SAAU,CAC9CuB,KAAKS,IAAIgC,MAAM,CAACzC,KAAKL,MAAMlB,SAAS,GAAIuB,KAAKL,MAAMlB,SAAS,KAE5D,IAAMiE,EAAc1C,KAAK1B,MAAMsB,UAAU+C,QAAO,SAAAvE,GAC9C,OAAOA,EAAMgD,SAASC,YAAY,KAAO,EAAK1B,MAAMlB,SAAS,IAAML,EAAMgD,SAASC,YAAY,KAAO,EAAK1B,MAAMlB,SAAS,MAG3H,GAAIiE,EAAY,GAAI,CAClB,IAAMtE,EAAQsE,EAAY,GACtBnB,EAAQnD,EAAMoD,WAAWC,WACzBC,EAAQtD,EAAMoD,WAAWG,WAEvBC,EAAa,SAACC,GAAW,OAAgB,IAATA,EAAa,UAAY,SAE/DpC,SAAS,CAACO,KAAKL,MAAMlB,SAAS,GAAIuB,KAAKL,MAAMlB,SAAS,IAAK,CAAEsD,KAAMvC,IAChEwC,UADH,uDAGgC5D,EAAMoD,WAAWS,KAHjD,iGAKgCC,IALhC,cAK4C9D,EAAMoD,WAAWW,QAL7D,gHAQ+BC,IAR/B,cAQ0ChE,EAAMoD,WAAWY,MAR3D,yHAWsCR,EAAWL,GAXjD,2BAWgEA,EAXhE,+DAYsCK,EAAWF,GAZjD,2BAYgEA,EAZhE,oDAeI,CAAEW,aAAa,IACfxB,MAAMb,KAAKS,KAAKmC,gB,6CAMxBC,cAAc7C,KAAKsC,W,+BAInB,OACE,yBAAKQ,GAAG,Y,GAzHQC,aAsIPC,eAPS,SAAAvE,GAAQ,MAAK,CAAEA,eAEZ,SAAAwE,GAAQ,MAAK,CACtCvE,eAAgB,SAAAD,GAAQ,OAAIwE,EAASvE,EAAeD,QAIvCuE,CAA6CtD,GC1ItDwD,E,YACJ,WAAYvD,GAAQ,IAAD,8BACjB,4CAAMA,KACDrB,MAAQ,GAFI,E,sEAOT,IAAD,OACD6E,EAAYnD,KAAKL,MAAMvB,MAAMoD,WAC7B4B,EAAgBpD,KAAKL,MAAMvB,MAAMgD,SAASC,YAC1CE,EAAQ4B,EAAU1B,WAClBC,EAAQyB,EAAUxB,WAElBC,EAAa,SAACC,GAAW,OAAgB,IAATA,EAAa,UAAY,SAE/D,OACE,yBACEwB,UAAU,aACVC,QAAS,kBAAM,EAAK3D,MAAMjB,eAAe,CAAC0E,EAAc,GAAIA,EAAc,OAE1E,yBAAKC,UAAU,cAAcF,EAAUlB,MACvC,yBAAKoB,UAAU,cACb,yBAAKA,UAAU,OAAOE,IAAKrB,MAAWiB,EAAUhB,SAElD,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,OAAOE,IAAKnB,MAAUe,EAAUf,OAEjD,yBAAKiB,UAAU,eACb,yBAAKA,UAAS,0BAAqBzB,EAAWL,KAA9C,iBAA6DA,GAC7D,yBAAK8B,UAAS,0BAAqBzB,EAAWF,KAA9C,iBAA6DA,EAA7D,W,GA9BcqB,aA0CTC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCvE,eAAgB,SAAAD,GAAQ,OAAIwE,EAASvE,EAAeD,QAGvCuE,CAAkCE,GC7BlCM,E,YAjBb,WAAY7D,GAAQ,qEACZA,I,sEAIN,IAAM8D,EAAczD,KAAKL,MAAM+D,OAC5BjD,KAAI,SAAArC,GAAK,OAAI,kBAAC,EAAD,CAAWuF,IAAKvF,EAAMoD,WAAWsB,GAAI1E,MAAOA,OAE5D,OACE,yBAAKiF,UAAU,cACZI,O,GAXeV,a,QCKlBa,E,YACJ,WAAYjE,GAAQ,IAAD,8BACjB,4CAAMA,KACDrB,MAAQ,CACXU,KAAM,GACN6E,SAAU,qBACVC,SAAU,sBALK,E,iFASE,IAAD,OACZhD,EAAa,kBAAMnC,IACtBE,MAAK,SAAAG,GACJ,EAAK+B,SAAS,CAAE/B,KAAMA,QAG1B8B,IACAd,KAAKsC,QAAUC,YAAYzB,EAAY,O,6CAIvC+B,cAAc7C,KAAKsC,W,+BAGX,IAAD,OACDyB,EAAaC,EAChBvD,KAAI,SAAAwD,GAAI,OAAI,4BAAQN,IAAKM,EAAKC,YAAaC,MAAOF,EAAKG,UAAWH,EAAKG,aAQpEC,EAAarE,KAAK1B,MAAMU,KAAK2D,QAAO,SAAAvE,GACxC,IAAM+E,EAAY/E,EAAMoD,WACxB,OAAO2B,EAAUhB,QAAQmC,SAAS,EAAKhG,MAAMuF,SAAW,EAAKvF,MAAMwF,YACvC,IAAzBX,EAAU1B,YAA6C,IAAzB0B,EAAUxB,eAGvC4C,EAAYvE,KAAK1B,MAAMU,KAAK2D,QAAO,SAAAvE,GAEvC,OADkBA,EAAMoD,WACPW,QAAQmC,SAAS,EAAKhG,MAAMuF,SAAW,EAAKvF,MAAMwF,aAUrE,OACE,yBAAKT,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,4BACEA,UAAU,eACVc,MAAOnE,KAAK1B,MAAMuF,SAClBW,SAAU,SAACC,GAAD,OAAO,EAAK1D,SAAS,CAAE8C,SAAUY,EAAEC,OAAOP,MAAOL,SAAU,OAEpEC,GAEH,4BACEV,UAAU,eACVc,MAAOnE,KAAK1B,MAAMwF,SAClBU,SAAU,SAACC,GACT,EAAK1D,SAAS,CAAE+C,SAAUW,EAAEC,OAAOP,QACnC,EAAKxE,MAAMjB,eAvBL,WAChB,GAA0B,IAAtB2F,EAAWnD,OAGf,MAAO,CAFGmD,EAAW,GAAGjD,SAASC,YAAY,GACnCgD,EAAW,GAAGjD,SAASC,YAAY,IAoBTsD,MAvCvBX,EAAerB,QAAO,SAAAsB,GAAI,OAAIA,EAAKG,WAAa,EAAK9F,MAAMuF,YAC5D,GAAGe,SACZnE,KAAI,SAAAoE,GAAI,OAAI,4BAAQlB,IAAKkB,EAAKC,YAAaX,MAAOU,EAAKE,UAAWF,EAAKE,eA4CtE,yBAAK1B,UAAU,cAAf,+DACY,8BAAOgB,EAAWnD,QAD9B,WAKF,kBAAC,EAAD,CAAWwC,OAAQa,S,GAhFNxB,aA4FNC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCvE,eAAgB,SAAAD,GAAQ,OAAIwE,EAASvE,EAAeD,QAGvCuE,CAAkCY,GCnFlCoB,MAVf,WACE,OACE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJN4B,IAASC,OAAO,kBAAC,IAAD,CAAU9G,MAAOA,GAAO,kBAAC,EAAD,OAAoB+G,SAASC,eAAe,W","file":"static/js/main.0be16091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.799a7977.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.ed1dfd6b.svg\";","import { createStore } from 'redux'\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);","export const reducer = (state = [24.97, 121.53], action) => {\r\n  switch (action.type) {\r\n    case 'updateLocation':\r\n      return action.location\r\n    default:\r\n      return state\r\n  }\r\n}","\r\nexport function updateLocation(location) { return { type: 'updateLocation', location } }","import * as L from 'leaflet';\r\n\r\n//link API and get mask data\r\nexport function GetMaskData() {\r\n  return fetch('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json?fbclid=IwAR0oowBRjj1goAMqtnugBiXMTMY8OCl14TGmgt3YDJi9w5BXs4VsfZQ9mDI')\r\n    .then(res => { return res.json() })\r\n    .then(data => { return data.features })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// For customMarker\r\nconst svg = \"<svg xmlns='http://www.w3.org/2000/svg' width='32' height='42.667' viewBox='0 0 32 42.667'><defs><style>.a{fill:#668afe;}.b{fill:none;stroke:#fff;stroke-linecap:round;stroke-width:4px;}</style></defs><g transform='translate(-960 -429)'><path class='a' d='M14.356,41.806C2.247,24.252,0,22.451,0,16a16,16,0,1,1,32,0c0,6.451-2.248,8.252-14.356,25.806a2,2,0,0,1-3.289,0Z' transform='translate(960 429)'/><g transform='translate(0 2)'><line class='b' x2='14' transform='translate(969 445)'/><line class='b' x2='14' transform='translate(976 438) rotate(90)'/></g></g></svg>\";\r\nconst iconUrl = 'data:image/svg+xml;base64,' + btoa(svg);\r\n\r\nexport const blueIcon = L.icon({\r\n  iconUrl: iconUrl,\r\n});\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster'\r\n\r\n//import svg icon\r\nimport marker from '../style/img/marker.svg'\r\nimport phone from '../style/img/phone.svg'\r\n\r\nimport { GetMaskData, blueIcon } from './common/GetData';\r\n\r\nclass MaskMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      storedata: []\r\n    }\r\n    this.GetUserGeo = this.GetUserGeo.bind(this);\r\n  }\r\n\r\n  GetUserGeo() {\r\n    const that = this;\r\n    function success(position) {\r\n      const latitude = position.coords.latitude;\r\n      const longitude = position.coords.longitude;\r\n\r\n      that.props.updateLocation([latitude, longitude])\r\n    }\r\n\r\n    function error() {\r\n      alert('Unable to retrieve your location');\r\n    }\r\n\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation is not supported by your browser');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = L.map('map', {\r\n      center: this.props.location,\r\n      zoom: 16\r\n    });\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n\r\n    const importData = () => GetMaskData().then(data => {\r\n      this.setState({ storedata: data });\r\n      const markers = L.markerClusterGroup().addTo(this.map);\r\n\r\n      for (let i = 0; i < (data.length - 1); i++) {\r\n        let lat = data[i].geometry.coordinates[1];\r\n        let lon = data[i].geometry.coordinates[0];\r\n        let adult = data[i].properties.mask_adult;\r\n        let child = data[i].properties.mask_child;\r\n\r\n        const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n        markers.addLayer(L.marker([lat, lon], { icon: blueIcon })\r\n          .bindPopup(\r\n            `<div>\r\n              <div class=\"store-name\">${data[i].properties.name}</div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\" src=${marker} />${data[i].properties.address}\r\n              </div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\" src=${phone} />${data[i].properties.phone}\r\n              </div>\r\n              <div class=\"mask-status\">\r\n                <div class='popup mask-item ${maskStatus(adult)}'>大人: ${adult}</div>\r\n                <div class='popup mask-item ${maskStatus(child)}'>小孩: ${child} </div>\r\n              </div>\r\n            </div>`,\r\n            { closeButton: false }\r\n          ));\r\n      }\r\n      this.map.addLayer(markers);\r\n    });\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 60000);\r\n\r\n    // this.GetUserGeo();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.location !== this.props.location) {\r\n      this.map.panTo([this.props.location[0], this.props.location[1]]);\r\n\r\n      const centerStore = this.state.storedata.filter(store => {\r\n        return store.geometry.coordinates[1] === this.props.location[0] && store.geometry.coordinates[0] === this.props.location[1]\r\n      })\r\n\r\n      if (centerStore[0]) {\r\n        const store = centerStore[0];\r\n        let adult = store.properties.mask_adult;\r\n        let child = store.properties.mask_child;\r\n\r\n        const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n        L.marker([this.props.location[0], this.props.location[1]], { icon: blueIcon })\r\n          .bindPopup(\r\n            `<div>\r\n              <div class=\"store-name\">${store.properties.name}</div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\" src=${marker} />${store.properties.address}\r\n              </div>\r\n              <div class=\"store-info\">\r\n                <img class=\"icon\"src=${phone} />${store.properties.phone}\r\n              </div>\r\n              <div class=\"mask-status\">\r\n                <div class='popup mask-item ${maskStatus(adult)}'>大人: ${adult}</div>\r\n                <div class='popup mask-item ${maskStatus(child)}'>小孩: ${child}</div>\r\n              </div>\r\n            </div>`,\r\n            { closeButton: false }\r\n          ).addTo(this.map).openPopup();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"map\"></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = location => ({ location })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaskMap);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../../redux/action';\r\n\r\n//import svg icon\r\nimport marker from '../../style/img/marker.svg'\r\nimport phone from '../../style/img/phone.svg'\r\n\r\nclass StoreItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const storeInfo = this.props.store.properties;\r\n    const storeLocation = this.props.store.geometry.coordinates;\r\n    const adult = storeInfo.mask_adult;\r\n    const child = storeInfo.mask_child;\r\n\r\n    const maskStatus = (item) => { return item === 0 ? \"soldout\" : \"stock\" };\r\n\r\n    return (\r\n      <div\r\n        className=\"store-item\"\r\n        onClick={() => this.props.updateLocation([storeLocation[1], storeLocation[0]])}\r\n      >\r\n        <div className=\"store-name\">{storeInfo.name}</div>\r\n        <div className=\"store-info\">\r\n          <img className=\"icon\" src={marker} />{storeInfo.address}\r\n        </div>\r\n        <div className=\"store-info\">\r\n          <img className=\"icon\" src={phone} />{storeInfo.phone}\r\n        </div>\r\n        <div className=\"mask-status\">\r\n          <div className={`mask-item adult ${maskStatus(adult)}`}>大人: {adult}</div>\r\n          <div className={`mask-item child ${maskStatus(child)}`}>小孩: {child} </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StoreItem);\r\n","import React, { Component } from 'react';\r\nimport StoreItem from './StoreItem';\r\n\r\nclass StoreList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const storeRender = this.props.stores\r\n      .map(store => <StoreItem key={store.properties.id} store={store} />)\r\n\r\n    return (\r\n      <div className=\"store-list\">\r\n        {storeRender}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default StoreList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateLocation } from '../redux/action';\r\n\r\nimport StoreList from './navbar/StoreList'\r\nimport { GetMaskData } from './common/GetData';\r\nimport CityCountyData from './common/CityCountyData.json'\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      cityName: '新北市',\r\n      areaName: '新店區'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const importData = () => GetMaskData()\r\n      .then(data => {\r\n        this.setState({ data: data })\r\n      })\r\n\r\n    importData();\r\n    this.getdata = setInterval(importData, 600000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getdata);\r\n  }\r\n\r\n  render() {\r\n    const citySelect = CityCountyData\r\n      .map(city => <option key={city.CityEngName} value={city.CityName}>{city.CityName}</option>);\r\n\r\n    const areaSelect = () => {\r\n      const city = CityCountyData.filter(city => city.CityName === this.state.cityName);\r\n      return city[0].AreaList\r\n        .map(area => <option key={area.AreaEngName} value={area.AreaName}>{area.AreaName}</option>);\r\n    }\r\n\r\n    const stockStore = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName) &&\r\n        (storeInfo.mask_adult !== 0 || storeInfo.mask_child !== 0);\r\n    })\r\n\r\n    const storeList = this.state.data.filter(store => {\r\n      const storeInfo = store.properties;\r\n      return storeInfo.address.includes(this.state.cityName + this.state.areaName)\r\n    })\r\n\r\n    const getCenter = () => {\r\n      if (stockStore.length === 0) { return }\r\n      let lat = stockStore[0].geometry.coordinates[1];\r\n      let lon = stockStore[0].geometry.coordinates[0];\r\n      return [lat, lon]\r\n    }\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"city-search\">\r\n          <div className=\"city-select\">\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.cityName}\r\n              onChange={(e) => this.setState({ cityName: e.target.value, areaName: '' })}\r\n            >\r\n              {citySelect}\r\n            </select>\r\n            <select\r\n              className=\"select-input\"\r\n              value={this.state.areaName}\r\n              onChange={(e) => {\r\n                this.setState({ areaName: e.target.value })\r\n                this.props.updateLocation(getCenter())\r\n              }}\r\n            >\r\n              {areaSelect()}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"city-total\">\r\n            能取得口罩的藥局有：<span>{stockStore.length}</span>家\r\n        </div>\r\n        </div>\r\n\r\n        <StoreList stores={storeList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateLocation: location => dispatch(updateLocation(location))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBar);\r\n","import React from 'react';\nimport './style/style.scss';\nimport './style/reset.css';\nimport MaskMap from './Component/MaskMap';\nimport NavBar from './Component/NavBar';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <MaskMap />\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}